# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "rhubarb-py"
packages = [{ include = "rhubarb" }]
version = "1.8.0"
description = "Rhubarb is a library that simplifies realtime streaming for a number of backends into a single API"
readme = "README.md"
authors = ["mopeyjellyfish <dev@davidhall.tech>"]
license = "MIT"
repository = "https://github.com/mopeyjellyfish/rhubarb"
homepage = "https://github.com/mopeyjellyfish/rhubarb"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = [] #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [ #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]


[tool.poetry.dependencies]
python = "^3.9"
aiokafka = "^0.7.2"
asyncpg = ">=0.24,<0.27"
aio-pika = ">=6.8,<9.0"
anyio = "^3.4.0"
redis = "^4.3.4"

[tool.poetry.extras]
redis = ["redis"]
kafka = ["aiokafka"]
postgres = ["asyncpg"]
rabbitmq = ["aio-pika"]

[tool.poetry.dev-dependencies]
bandit = "^1.7.4"
black = { version = "^22.6", allow-prereleases = true }
darglint = "^1.8.0"
isort = { extras = ["colors"], version = "^5.9.3" }
mypy = "^0.971"
mypy-extensions = "^0.4.3"
pre-commit = "^2.20.0"
pydocstyle = "^6.1.1"
pylint = "^2.14.5"
pytest = "^7.3.1"
pyupgrade = "^2.37.3"
safety = "^2.1.1"
pytest-asyncio = "^0.19.0"
Sphinx = "^5.1.1"
sphinx-rtd-theme = "^1.0.0"
pytest-cov = "^3.0.0"
asyncpg = ">=0.24,<0.27"
aiokafka = "^0.7.2"
aio-pika = ">=6.8,<9.0"
hypothesis = "^6.53.0"


[tool.black]
# https://github.com/psf/black
target-version = ["py39"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39
line_length = 88

known_typing = [
  "typing",
  "types",
  "typing_extensions",
  "mypy",
  "mypy_extensions",
]
sections = [
  "FUTURE",
  "TYPING",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "LOCALFOLDER",
]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = [
  "hooks",
  "*.egg",
  ".eggs",
  "dist",
  "build",
  "docs",
  ".tox",
  ".git",
  "__pycache__",
]
doctest_optionflags = [
  "NUMBER",
  "NORMALIZE_WHITESPACE",
  "IGNORE_EXCEPTION_DETAIL",
]
asyncio_mode = "auto"
# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]
